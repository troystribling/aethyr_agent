############################################################################################################
module Aethyr

  ############################################################################################################
  module Linux
  
    ############################################################################################################
    module Interface
    
      ##########################################################################################################
      class SoftwarePackageRepositories
  
        ######################################################################################################
        #### class methods
        class << self
  
          ########################################################################################################
          def find(type = :all, options = {})
            if type.eql?(:first)
            else
              self.find_all
            end
          end

        ######################################################################################################
        protected
    
          ##########################################################################################################
          def find_all

            rows = `cat /etc/apt/sources.list`.split("\n")
            repos = []
            rows.each do |r|
              attrs = r.split(/\s+/)  
              next if /^#/.match(r) or attrs.length.eql?(0)              
              unless /cdrom/.match(r)
                repos << {
                          :repository_type  => attrs[0],
                          :address          => attrs[1],
                          :name             => attrs[2],
                          :components       => attrs[3..attrs.length-1]
                          }
              else
                addr_end = attrs.index(attrs.detect{|a| /\/$/.match(a)})
                unless addr_end.nil?
                  repos << {
                            :repository_type  => attrs[0],
                            :address          => attrs[1..addr_end].join(' '),
                            :name             => attrs[addr_end+1],
                            :components       => attrs[addr_end+2..attrs.length-1]
                           }
                end
              end
            end
            repos

          end
    
        ######################################################################################################
        end  
        
      ##########################################################################################################
      end
  
    ##########################################################################################################
    end

  ##########################################################################################################
  end
  
##########################################################################################################
end

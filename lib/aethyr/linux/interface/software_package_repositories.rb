############################################################################################################
module Aethyr

  ############################################################################################################
  module Linux
  
    ############################################################################################################
    module Interface
    
      ##########################################################################################################
      class SoftwarePackageRepositories
  
        ######################################################################################################
        #### class methods
        class << self
  
          ########################################################################################################
          def find(type = :all, options = {})
            if type.eql?(:first)
            else
              self.find_all
            end
          end

        ######################################################################################################
        protected
    
          ##########################################################################################################
          def find_all

            rows = `cat /etc/apt/sources.list`.split("\n")
            repos = {}
            rows.each do |r|
              attrs = r.split(/\s+/)  
              if /cdrom/.match(r)
                build_hash_for_cdrom(repos, r) 
                next
              end
              next if /^#/.match(r) or attrs.length.eql?(0)              
              key = attrs[2] + attrs[3..attrs.length-1].join + attrs[0]
              repos[key] = {
                            :repository_type  => attrs[0],
                            :address          => attrs[1],
                            :name             => attrs[2],
                            :components       => attrs[3..attrs.length-1]
                           }
p repos[key]              
            end

            repos.values
            
          end
    
          ##########################################################################################################
          def build_hash_for_cdrom(repos, r)
            {
            }
          end
    
        ######################################################################################################
        end  
        
      ##########################################################################################################
      end
  
    ##########################################################################################################
    end

  ##########################################################################################################
  end
  
##########################################################################################################
end

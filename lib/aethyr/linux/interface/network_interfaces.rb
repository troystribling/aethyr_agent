############################################################################################################
module Aethyr

  ############################################################################################################
  module Linux
  
    ############################################################################################################
    module Interface
    
      ##########################################################################################################
      class NetworkInterfaces
  
        ######################################################################################################
        #### class attributes
        @@services = nil
        
        ######################################################################################################
        #### class methods
        class << self
  
          ########################################################################################################
          def find(type = :all, options = {})
            if type.eql?(:first)
            else
              self.find_all
            end
          end
          
        ######################################################################################################
        protected
    
          ##########################################################################################################
          def find_all

            rows = `ifconfig -a`.split("\n")
            rows = rows.collect{|r| r.split(/\s+/)}
            ifaces = []
            row = 0
            until row.eql?(rows.length)
              iface_type = /^(\D+)/.match(rows[row][0]).to_a.last
              iface_type.nil? ? row += 1 : row = self.send("build_#{iface_type}".to_sym, row, rows, ifaces)
            end
            ifaces
          end

          ##########################################################################################################
          def build_eth(row, rows, ifaces) 
p rows[row]
row += 1
          end

          ##########################################################################################################
          def build_lo(row, rows, ifaces) 
p rows[row]
row += 1
          end

          ##########################################################################################################
          def get_attr_value(attr)
            attr.split(":").last
          end

        ######################################################################################################
        end  
        
      ##########################################################################################################
      end
  
    ##########################################################################################################
    end

  ##########################################################################################################
  end
  
##########################################################################################################
end

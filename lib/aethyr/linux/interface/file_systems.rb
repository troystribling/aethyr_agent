############################################################################################################
module Aethyr

  ############################################################################################################
  module Linux
  
    ############################################################################################################
    module Interface
    
      ##########################################################################################################
      class FileSystems
  
        ######################################################################################################
        #### class methods
        class << self
  
          ########################################################################################################
          def find(type = :all, options = {})
            if type.eql?(:first)
            else
              self.find_all
            end
          end

        ######################################################################################################
        protected
    
          ##########################################################################################################
          def find_all

            parts = {}
            
            rows = `df -k`.split("\n")
            rows.each do |r|
              attrs = r.split(/\s+/)
              parts[attrs[0]] = {
               :name       => attrs[0], 
               :size       => attrs[1],
               :size_units => 'KB',               
               :mount      => attrs[5],
              }
            end    
            
            rows = `cat /etc/mtab`.split("\n")
            rows.each do |r|
              attrs = r.split(/\s+/)
              parts[attrs[0]].update(:file_system_type => attrs[2]) unless parts[attrs[0]].nil?
            end

            parts.values
            
          end
    
        ######################################################################################################
        end  
        
      ##########################################################################################################
      end
  
    ##########################################################################################################
    end

  ##########################################################################################################
  end
  
##########################################################################################################
end

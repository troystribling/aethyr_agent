############################################################################################################
module Aethyr

  ############################################################################################################
  module Linux
  
    ############################################################################################################
    module Interface
    
      ##########################################################################################################
      class ApplicationProcesses
  
        ######################################################################################################
        #### class methods
        class << self
  
          ########################################################################################################
          def find(type = :all, options = {})
            if type.eql?(:first)
            else
              self.find_all
            end
          end
    
          ##########################################################################################################
          def find_all
            rows = `ps -eo pid,lwp,f,rtprio,ni,sz,vsz,rss,sess,wchan,stat,tty,time,user,pcpu,pmem,start,nlwp,psr,command`.split("\n")
            rows[0].gsub!(/^\s+/, '')
            attr_names = rows.shift.split(/\s+/).collect{|a| a.gsub!(/%/, 'p'); a.downcase.to_sym}
            rows.collect do |p|
              attrs = p.split(/\s+/)
p attrs              
              row = {}
              attrs.each_index{|a| row.update(attr_names[a] => attrs[a])}
p row              
              row if row[:pid].eql?(row[:lwp])
            end
            
          end
    
        ######################################################################################################
        end  
        
      ##########################################################################################################
      end
  
    ##########################################################################################################
    end

  ##########################################################################################################
  end
  
##########################################################################################################
end

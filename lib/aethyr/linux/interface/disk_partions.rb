############################################################################################################
module Aethyr

  ############################################################################################################
  module Linux
  
    ############################################################################################################
    module Interface
    
      ##########################################################################################################
      class DiskPartitions
  
        ######################################################################################################
        #### class methods
        class << self
  
          ########################################################################################################
          def find(type = :all, options = {})
            if type.eql?(:first)
            else
              self.find_all
            end
          end

        ######################################################################################################
        protected
    
          ##########################################################################################################
          def find_all

            parts = {}
            
            rows = `ls -il /dev/sd* | egrep "sd[a-z][1-9]+"`.split("\n")
            rows.each do |r|
              r.gsub!(/^\s+/, '')
              attrs = r.split(/\s+/)
              parts[attrs[9]] = {
               :name         => attrs[9], 
               :last_updated => "#{attrs[7]} #{attrs[8]}", 
               :major_number => attrs[5], 
               :minor_number => attrs[6], 
               :links        => attrs[2], 
               :device_type  => /^(\w).*/.match(attrs[1]).to_a.last, 
               :owner        => attrs[3], 
               :group        => attrs[4],
               :i_node       => attrs[0],
              }
            end          
            
            rows = `cat /proc/partions`.split("\n")
            rows.each do |r|
              r.gsub!(/^\s+/, '')
              next unless /^\d+/.match(r)
              attrs = r.split(/\s+/)
              parts[attrs[3]] = {
               :size => attrs[2],
              } unless parts[attrs[3]].nil?
            end
            
            parts.values
            
          end
    
        ######################################################################################################
        end  
        
      ##########################################################################################################
      end
  
    ##########################################################################################################
    end

  ##########################################################################################################
  end
  
##########################################################################################################
end

############################################################################################################
module Aethyr

  ############################################################################################################
  module Linux
  
    ############################################################################################################
    module Interface
    
      ##########################################################################################################
      class UnixSockets
  
        ######################################################################################################
        #### class methods
        class << self
  
          ########################################################################################################
          def find(type = :all, options = {})
            if type.eql?(:first)
            else
              self.find_all
            end
          end
    
          ##########################################################################################################
          def find_all
            rows = `netstat -pnax`.split("\n")
            socks = {};
            rows.each do |r|
              r.tr!('[]', '')
              attrs = r.split(/\s+/)
              next if attrs[0].eql?('unix')
              if attrs.length.eql?(5)
              elsif attrs.length.eql?(6)
              elsif attrs.length.eql?(7)
              end
            end
          end
    
        ######################################################################################################
        end  
        
      ##########################################################################################################
      end
  
    ##########################################################################################################
    end

  ##########################################################################################################
  end
  
##########################################################################################################
end
